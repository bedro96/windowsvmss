{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Type existing virtual network name"
            }
        },
        "subnetName": {
            "type": "string",
            "metadata": {
                "description": "Type existing Subnet name"
            }
        },
        "virtualMachineScaleSetName": {
            "type": "string"
        },
        "virtualMachineScaleSetRG": {
            "type": "string"
        },
        "singlePlacementGroup": {
            "type": "string"
        },
        "instanceSize": {
            "type": "string"
        },
        "instanceCount": {
            "type": "string"
        },
        "upgradeMode": {
            "type": "string"
        },
        "priority": {
            "type": "string"
        },
        "enableAcceleratedNetworking": {
            "type": "string"
        },
        "osDiskType": {
            "type": "string"
        },
        "networkSecurityGroups": {
            "type": "array"
        },
        "networkInterfaceConfigurations": {
            "type": "array"
        },
        "diagnosticStorageAccount": {
            "type": "string"
        },
        "diagnosticsStorageAccountKind": {
            "type": "string"
        },
        "diagnosticsStorageAccountType": {
            "type": "string"
        },
        "upgradePolicy": {
            "type": "string"
        },
        "adminUsername": {
            "type": "string"
        },
        "adminPassword": {
            "type": "secureString"
        },
        "platformFaultDomainCount": {
            "type": "string"
        },
        "_artifactsLocation": {
            "defaultValue": "https://artifactslocation00.blob.core.windows.net/scripts",
            "type": "string",
            "metadata": {
              "description": "The base URI where artifacts required by this template are located."
            }
      
        },
        "customImageId": {
            "type": "string",
            "defaultValue": "/subscriptions/05be085b-86ea-4336-addc-38fd56051a9e/resourceGroups/customimagerg/providers/Microsoft.Compute/images/baseimage00-image-20200609200139"
        }
    },
    "variables": {
        "storageApiVersion": "2019-06-01",
        "namingInfix": "[toLower(substring(concat(parameters('virtualMachineScaleSetName'), uniqueString('1234567890')), 0, 9))]",
        "subnetRef": "[resourceID('Microsoft.Network/virtualNetworks/subnets', parameters('virtualNetworkName'), parameters('subnetName'))]"
    },
    "resources": [

        {
            "name": "[parameters('networkSecurityGroups')[copyIndex()].name]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2019-02-01",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroups')[copyIndex()].rules]"
            },
            "copy": {
                "name": "networkSecurityGroups",
                "count": "[length(parameters('networkSecurityGroups'))]"
            }
        },
        {
            "name": "[parameters('diagnosticStorageAccount')]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "2019-06-01",
            "location": "[parameters('location')]",
            "properties": {},
            "sku": {
                "name": "[parameters('diagnosticsStorageAccountType')]"
            },
            "kind": "[parameters('diagnosticsStorageAccountKind')]"
        },
        {
            "name": "[parameters('virtualMachineScaleSetName')]",
            "type": "Microsoft.Compute/virtualMachineScaleSets",
            "apiVersion": "2019-03-01",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', parameters('diagnosticStorageAccount'))]"
            ],
            "sku": {
                "name": "[parameters('instanceSize')]",
                "tier": "Standard",
                "capacity": "[int(parameters('instanceCount'))]"
            },
            "properties": {
                "overprovision": "true",
                "upgradePolicy": {
                    "mode": "[parameters('upgradePolicy')]"
                },
                "singlePlacementGroup": "[parameters('singlePlacementGroup')]",
                "virtualMachineProfile": {
                    "storageProfile": {
                        "osDisk": {
                            "createOption": "fromImage",
                            "managedDisk": {
                                "storageAccountType": "[parameters('osDiskType')]"
                            }
                        },
                        "imageReference": {
                            "id": "[parameters('customImageId')]"
                        }
                    },
                    "priority": "[parameters('priority')]",
                    "networkProfile": {
                        "copy": [
                            {
                                "name": "networkInterfaceConfigurations",
                                "count": "[length(parameters('networkInterfaceConfigurations'))]",
                                "input": {
                                    "name": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name]",
                                    "properties": {
                                        "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                        "enableAcceleratedNetworking": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].enableAcceleratedNetworking]",
                                        "ipConfigurations": [
                                            {
                                                "name": "[concat(parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].name, '-defaultIpConfiguration')]",
                                                "properties": {
                                                    "subnet": {
                                                        "id": "[variables('subnetRef')]"
                                                    },
                                                    "primary": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].primary]",
                                                    "applicationGatewayBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].applicationGatewayBackendAddressPools]",
                                                    "loadBalancerBackendAddressPools": "[parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].loadBalancerBackendAddressPools]",
                                                    "publicIPAddressConfiguration": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, ''), json('null'), union(json(concat('{\"name\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].pipName, '\"}'))\n                        ,json('{\"properties\": { \"idleTimeoutInMinutes\": 15}}')))]"
                                                }
                                            }
                                        ],
                                        "networkSecurityGroup": "[if( equals( parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, ''), json('null'),json(concat('{\"id\": \"', parameters('networkInterfaceConfigurations')[copyIndex('networkInterfaceConfigurations')].nsgId, '\"}')))]"
                                    }
                                }
                            }
                        ]
                    },
                    "extensionProfile": {
                        "extensions": [
                            {
                                "name": "customScript",
                                "properties": {
                                    "publisher": "Microsoft.Compute",
                                    "settings": {
                                    "fileUris": [
                                        "[concat(parameters('_artifactsLocation'), '/iisconfig.ps1')]"
                                    ]
                                },
                                "typeHandlerVersion": "1.8",
                                "autoUpgradeMinorVersion": true,
                                "protectedSettings": {
                                    "commandToExecute": "powershell -ExecutionPolicy Unrestricted -File iisconfig.ps1"
                                },
                                "type": "CustomScriptExtension"
                                }
                            }
                        ]
                    },
                    "diagnosticsProfile": {
                        "bootDiagnostics": {
                            "enabled": true,
                            "storageUri": "[reference(parameters('diagnosticStorageAccount'), variables('storageApiVersion')).primaryEndpoints.blob]"
                        }
                    },
                    "osProfile": {
                        "computerNamePrefix": "[variables('namingInfix')]",
                        "adminUsername": "[parameters('adminUsername')]",
                        "adminPassword": "[parameters('adminPassword')]"
                    }
                },
                "platformFaultDomainCount": "[parameters('platformFaultDomainCount')]"
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "string",
            "value": "[parameters('adminUsername')]"
        }
    }
}